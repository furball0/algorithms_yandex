# На координатной плоскости расположены равнобедренный прямоугольный треугольник ABC с длиной катета d и точка X.
# Катеты треугольника лежат на осях координат, а вершины расположены в точках: A (0,0), B (d,0), C (0,d).
#
# Напишите программу, которая определяет взаим
# ное расположение точки X и треугольника.
# Если точка X расположена внутри или на сторонах треугольника, выведите 0. Если же точка находится вне треугольника,
# выведите номер ближайшей к ней вершины.
#
# Формат ввода
# Сначала вводится натуральное число d (не превосходящее 1000), а затем координаты точки X – два целых числа из
# диапазона от –1000 до 1000.
#
# Формат вывода
# Если точка лежит внутри, на стороне треугольника или совпадает с одной из вершин, то выведите число 0.
# Если точка лежит вне треугольника, то выведите номер вершины треугольника,
# к которой она расположена ближе всего (1 – к вершине A, 2 – к B, 3 – к C).
# Если точка расположена на одинаковом расстоянии от двух вершин, выведите ту вершину, номер которой меньше.

'''
from math import sqrt


def y_function(x, d):
	return d - x


def dist_to_apex(x2, y2):
	# x, y - точка
	# x2, y2 - вершина
	dist = sqrt((x - x2) ** 2 + (y - y2) ** 2)
	return dist


d = int(input())
coord = list(map(int, input().split()))
x, y = coord[0], coord[1]

if 0 <= x <= d and 0 <= y <= y_function(x, d):
	print(0)
else:
	dist_A = dist_to_apex(0, 0)
	dist_B = dist_to_apex(d, 0)
	dist_C = dist_to_apex(0, d)
	min_dist = min(dist_A, dist_B, dist_C)
	if dist_A == min_dist:
		print(1)
	elif dist_B == min_dist:
		print(2)
	else:
		print(3)
'''

d = int(input())
coord = list(map(int, input().split()))
x, y = coord[0], coord[1]

if x >= 0 and y >= 0 and y <= d - x:
	print(0)
else:
	dist = [(x**2 + y**2, 1), ((x-d)**2 + y**2, 2), (x**2 + (y-d)**2, 3)]
	print(min(dist)[1])